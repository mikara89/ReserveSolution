{
	"info": {
		"_postman_id": "763a083d-4590-495c-bd9c-2484254cdee4",
		"name": "test ReserveSolution",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetAllTeams",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de238340-b487-4d07-8726-207ae84c6c1f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/team",
					"host": [
						"{{url}}"
					],
					"path": [
						"team"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateTeam",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc321a3b-2b6d-4f80-8d49-d7a4253392dc",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.variables.set(\"Id\", jsonData.id);\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teamName\": \"string\",\r\n  \"regNumber\": 123356458\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team",
					"host": [
						"{{url}}"
					],
					"path": [
						"team"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateTeamConflictRegNum",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2425ee2c-cd15-4fed-9bd7-59496bd363ef",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Create conflict teamName\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.errors.RegNumber[0])\r",
							"        .to.eql(\"Registration number already taken.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teamName\": \"stringsadasfasfasf\",\r\n  \"regNumber\": 123356458\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team",
					"host": [
						"{{url}}"
					],
					"path": [
						"team"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateTeamConflictTeamName",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "facfa45e-c7de-4b99-9e3c-625e3739061b",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Create conflict teamName\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.errors.TeamName[0])\r",
							"        .to.eql(\"Team name already taken.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"teamName\": \"string\",\r\n  \"regNumber\": 236545985\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team",
					"host": [
						"{{url}}"
					],
					"path": [
						"team"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTeam200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "73f1f9ba-2621-4faf-8ec4-3ca1e59ea551",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutTeam",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc321a3b-2b6d-4f80-8d49-d7a4253392dc",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"  pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"teamName\": \"stringsw3\",\r\n    \"regNumber\": 695758624\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutTeamConflictRegNum",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36a0498-0ce4-408f-9706-452265e75e41",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Update conflict teamName\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.errors.RegNumber[0])\r",
							"        .to.eql(\"Registration number already taken.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"regNumber\": 695758624\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutTeamConflictTeamName",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f46fb667-17d4-45dc-a101-cfb5667dfeb8",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Update conflict teamName\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.errors.TeamName[0])\r",
							"        .to.eql(\"Team name already taken.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"teamName\": \"stringsw3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTeam200AfterPut",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ebb9edaf-7235-42e7-96a0-95627eb0092b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   \r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Team Updated\", () => {\r",
							" const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.teamName).to.eql(\"stringsw3\");\r",
							"    pm.expect(responseJson.regNumber).to.eql(695758624);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteTeam",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc321a3b-2b6d-4f80-8d49-d7a4253392dc",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteTeam404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c45cd52-8f0b-4d2a-bf3a-a07719fba239",
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTeam404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc321a3b-2b6d-4f80-8d49-d7a4253392dc",
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/team/{{Id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"team",
						"{{Id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{TOKEN}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "da627077-6a9d-44c4-929d-c60a536565e1",
				"type": "text/javascript",
				"exec": [
					"const authCall={",
					"    url: pm.collectionVariables.get('authUrl')+'/connect/token',",
					"    method: 'POST',",
					"    header: 'Content-Type:application/x-www-form-urlencoded',",
					"    body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                    { key: \"client_id\", value: 'gw_api_postman_pw', enable:true },",
					"                    { key: \"client_secret\", value: 'My very secret secret', enable:true  },",
					"                    { key: \"username\", value: 'smikaric@team.com', enable:true  },",
					"                    { key: \"password\", value: 'mikara@89Team', enable:true  },",
					"                    { key: \"scope\", value: 'TeamApi', enable:true  },",
					"                    { key: \"grant_type\", value: 'password', enable:true  },",
					"            ]",
					"        }",
					"    } ",
					"",
					" ",
					"",
					"    function authFunc (){",
					"        if(!pm.collectionVariables.get(\"TOKEN\"))",
					"        {",
					"            pm.sendRequest(authCall, function(err, res){",
					"                if (err) {",
					"                    console.log(err);",
					"                } else {",
					"                    pm.collectionVariables.set(\"TOKEN\", res.json().access_token);",
					"            }} );",
					"        }",
					"        else{",
					"            console.log(\"Already Loged\")",
					"        }",
					"    };",
					"    authFunc ();  ",
					"                                  ",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0466eb1d-b3ab-46a2-9eb1-8ac1855e44e3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "9162f6b3-d30a-4c45-b476-13ec18639d4b",
			"key": "url",
			"value": "https://localhost:32789"
		},
		{
			"id": "90091a53-6c65-4e08-a757-2db4ec18372a",
			"key": "Id",
			"value": ""
		},
		{
			"id": "1524f2f6-a53e-4ae8-bc3f-b0dc71718e1b",
			"key": "authUrl",
			"value": "https://localhost:5000"
		},
		{
			"id": "69e89c08-ebdb-4eb2-9a4d-eaa27b8ab1fe",
			"key": "TOKEN",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}